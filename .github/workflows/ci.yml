name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: service_desk_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./packages/backend
        run: npm ci

      - name: Run backend linter
        working-directory: ./packages/backend
        run: npm run lint

      - name: Run backend tests
        working-directory: ./packages/backend
        run: npm test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: service_desk_test
          JWT_SECRET: test-secret

      - name: Build backend
        working-directory: ./packages/backend
        run: npm run build

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: backend-test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend Docker image
        run: docker build -f docker/Dockerfile.backend -t service-desk-backend ./packages/backend

      - name: Test Docker Compose
        run: docker-compose config

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-test, docker-build]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        run: echo "Add deployment steps here"
        # Add your deployment logic:
        # - Build and push Docker images to registry
        # - Deploy to cloud provider (AWS, GCP, Azure)
        # - Update Kubernetes manifests
        # - Run database migrations
